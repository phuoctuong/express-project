{"version":3,"sources":["helper/logger.js"],"names":["logPath","path","join","process","cwd","fs","existsSync","mkdirSync","myFormat","winston","format","printf","info","timestamp","level","message","logger","createLogger","combine","simple","exceptionHandlers","transports","File","filename","maxsize","maxFiles","env","NODE_ENV","add","Console","colorize"],"mappings":";;;;;;AASA;;;;AACA;;;;AACA;;;;;;AAEA,IAAMA,UAAUC,eAAKC,IAAL,CAAUC,QAAQC,GAAR,EAAV,EAAyB,KAAzB,CAAhB,C,CAbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAQA,IAAI,CAACC,aAAGC,UAAH,CAAcN,OAAd,CAAL,EAA6B;AAC5BK,cAAGE,SAAH,CAAaP,OAAb;AACA;;AAED,IAAMQ,WAAWC,kBAAQC,MAAR,CAAeC,MAAf,CAAsB,gBAAQ;AAC9C,QAAUC,KAAKC,SAAf,SAA4BD,KAAKE,KAAjC,UAA2CF,KAAKG,OAAhD;AACA,CAFgB,CAAjB;;AAIA,IAAMC,SAASP,kBAAQQ,YAAR,CAAqB;AACnCP,SAAQD,kBAAQC,MAAR,CAAeQ,OAAf,CACPT,kBAAQC,MAAR,CAAeS,MAAf,EADO,CAD2B;AAInCC,oBAAmB,CAClB,IAAIX,kBAAQY,UAAR,CAAmBC,IAAvB,CAA4B,EAAEC,UAAUtB,eAAKC,IAAL,CAAUF,OAAV,EAAmB,gBAAnB,CAAZ,EAA5B,CADkB,CAJgB;AAOnCqB,aAAY,CACX,IAAIZ,kBAAQY,UAAR,CAAmBC,IAAvB,CAA4B,EAAEC,UAAUtB,eAAKC,IAAL,CAAUF,OAAV,EAAmB,WAAnB,CAAZ,EAA6Cc,OAAO,OAApD,EAA6DD,WAAW,IAAxE,EAA5B,CADW,EAEX,IAAIJ,kBAAQY,UAAR,CAAmBC,IAAvB,CAA4B;AAC3BC,YAAUtB,eAAKC,IAAL,CAAUF,OAAV,EAAmB,SAAnB,CADiB;AAE3Ba,aAAW,IAFgB;AAG3BW,WAAS,OAHkB,EAGT;AAClBC,YAAU;AAJiB,EAA5B,CAFW;AAPuB,CAArB,CAAf;;AAkBA,IAAItB,QAAQuB,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AAC1CX,QAAOY,GAAP,CAAW,IAAInB,kBAAQY,UAAR,CAAmBQ,OAAvB,CAA+B;AACzCnB,UAAQD,kBAAQC,MAAR,CAAeQ,OAAf,CACPT,kBAAQC,MAAR,CAAeG,SAAf,EADO,EAEPJ,kBAAQC,MAAR,CAAeoB,QAAf,EAFO,EAGPtB,QAHO;AADiC,EAA/B,CAAX;AAOA;;kBAEcQ,M","file":"logger.js","sourcesContent":["// levels: {\n// \terror: 0,\n// \twarn: 1,\n// \tinfo: 2,\n// \tverbose: 3,\n// \tdebug: 4,\n// \tsilly: 5\n// }\n\nimport winston from 'winston';\nimport path from 'path';\nimport fs from 'fs';\n\nconst logPath = path.join(process.cwd(), 'log');\n\nif (!fs.existsSync(logPath)) {\n\tfs.mkdirSync(logPath);\n}\n\nconst myFormat = winston.format.printf(info => {\n\treturn `${info.timestamp} ${info.level}: ${info.message}`;\n});\n\nconst logger = winston.createLogger({\n\tformat: winston.format.combine(\n\t\twinston.format.simple()\n\t),\n\texceptionHandlers: [\n\t\tnew winston.transports.File({ filename: path.join(logPath, 'exceptions.log') })\n\t],\n\ttransports: [\n\t\tnew winston.transports.File({ filename: path.join(logPath, 'error.log'), level: 'error', timestamp: true }),\n\t\tnew winston.transports.File({\n\t\t\tfilename: path.join(logPath, 'all.log'),\n\t\t\ttimestamp: true,\n\t\t\tmaxsize: 5242880, // 5MB\n\t\t\tmaxFiles: 5\n\t\t})\n\t]\n});\n\nif (process.env.NODE_ENV !== 'production') {\n\tlogger.add(new winston.transports.Console({\n\t\tformat: winston.format.combine(\n\t\t\twinston.format.timestamp(),\n\t\t\twinston.format.colorize(),\n\t\t\tmyFormat\n\t\t)\n\t}));\n}\n\nexport default logger;"]}