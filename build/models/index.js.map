{"version":3,"sources":["models/index.js"],"names":["models","initialModel","sequelize","fs","readdirSync","path","resolve","__dirname","filter","file","indexOf","forEach","model","import","name","modelName","hasOwnProperty","associate","loadScope","prototype","toJSON","get","value","key"],"mappings":";;;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AAEA,IAAMA,SAAS,EAAf;AACA,IAAMC,eAAe,SAAfA,YAAe,CAACC,SAAD,EAAe;AACnCC,cAAGC,WAAH,CAAeC,eAAKC,OAAL,CAAaC,SAAb,CAAf,EACEC,MADF,CACS,gBAAQ;AACf,SAAQC,KAAKC,OAAL,CAAa,GAAb,MAAsB,CAAC,CAAvB,IAA4BD,SAAS,UAA7C;AACA,EAHF,EAIEE,OAJF,CAIU,gBAAQ;AAChB,MAAMC,QAAQV,UAAUW,MAAV,CAAiBR,eAAKC,OAAL,CAAaC,SAAb,EAAwBE,IAAxB,CAAjB,CAAd;AACAT,SAAOY,MAAME,IAAb,IAAqBF,KAArB;AACA,EAPF;;AASA,qBAAYZ,MAAZ,EAAoBW,OAApB,CAA4B,qBAAa;AACxC,MAAIX,OAAOe,SAAP,EAAkBC,cAAlB,CAAiC,WAAjC,CAAJ,EAAmD;AAClDhB,UAAOe,SAAP,EAAkBE,SAAlB,CAA4BjB,MAA5B;AACA;AACD,MAAIA,OAAOe,SAAP,EAAkBC,cAAlB,CAAiC,WAAjC,CAAJ,EAAmD;AAClDhB,UAAOe,SAAP,EAAkBG,SAAlB,CAA4BlB,MAA5B;AACA;;AAEDA,SAAOe,SAAP,EAAkBI,SAAlB,CAA4BC,MAA5B,GAAqC,YAAY;AAChD,UAAO,qBAAQ,KAAKC,GAAL,EAAR,EAAoB,UAACC,KAAD,EAAQC,GAAR,EAAgB;AAC1C,WAAO,uBAAUA,GAAV,CAAP;AACA,IAFM,CAAP;AAGA,GAJD;AAKA,EAbD;;AAeA,QAAOvB,MAAP;AACA,CA1BD;;QA4BSA,M,GAAAA,M;QAAQC,Y,GAAAA,Y","file":"index.js","sourcesContent":["import fs from 'fs';\nimport path from 'path';\nimport { mapKeys, camelCase } from 'lodash';\n\nconst models = {};\nconst initialModel = (sequelize) => {\n\tfs.readdirSync(path.resolve(__dirname))\n\t\t.filter(file => {\n\t\t\treturn (file.indexOf('.') !== -1 && file !== 'index.js');\n\t\t})\n\t\t.forEach(file => {\n\t\t\tconst model = sequelize.import(path.resolve(__dirname, file));\n\t\t\tmodels[model.name] = model;\n\t\t});\n\n\tObject.keys(models).forEach(modelName => {\n\t\tif (models[modelName].hasOwnProperty('associate')) {\n\t\t\tmodels[modelName].associate(models);\n\t\t}\n\t\tif (models[modelName].hasOwnProperty('loadScope')) {\n\t\t\tmodels[modelName].loadScope(models);\n\t\t}\n\n\t\tmodels[modelName].prototype.toJSON = function () {\n\t\t\treturn mapKeys(this.get(), (value, key) => {\n\t\t\t\treturn camelCase(key);\n\t\t\t});\n\t\t};\n\t});\n\n\treturn models;\n};\n\nexport { models, initialModel };"]}