{"version":3,"sources":["app.js"],"names":["app","server","http","createServer","use","bodyParser","json","urlencoded","extended","passport","initialize","authRouter","socialRouter","userRouter","postRouter","get","req","res","send","status","code","error","message","err","next","erorr","process","env","NODE_ENV","io","listen","log","info"],"mappings":";;;;;;AAEA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AAOA,IAAMA,MAAM,wBAAZ;AACA,IAAMC,SAASC,eAAKC,YAAL,CAAkBH,GAAlB,CAAf;;AAEAA,IAAII,GAAJ,CAAQC,qBAAWC,IAAX,EAAR;AACAN,IAAII,GAAJ,CAAQC,qBAAWE,UAAX,CAAsB,EAAEC,UAAU,IAAZ,EAAtB,CAAR;AACAR,IAAII,GAAJ,CAAQK,mBAASC,UAAT,EAAR;;AAEAV,IAAII,GAAJ,CAAQ,OAAR,EAAiBO,kBAAjB,EAA6BC,oBAA7B;AACAZ,IAAII,GAAJ,CAAQ,YAAR,EAAsBS,kBAAtB;AACAb,IAAII,GAAJ,CAAQ,YAAR,EAAsBU,kBAAtB;;AAEAd,IAAIe,GAAJ,CAAQ,GAAR,EAAa,UAACC,GAAD,EAAMC,GAAN,EAAc;AAC1BA,KAAIC,IAAJ,CAAS,oBAAT;AACA,CAFD;;AAIA;AACAlB,IAAIe,GAAJ,CAAQ,GAAR,EAAa,UAACC,GAAD,EAAeC,GAAf,EAAiC;AAC7CA,KAAIE,MAAJ,CAAW,GAAX,EAAgBb,IAAhB,CAAqB;AACpBc,QAAM,GADc;AAEpBC,SAAO,IAFa;AAGpBC,WAAS;AAHW,EAArB;AAKA,CAND;;AAQAtB,IAAII,GAAJ,CAAQ,UAACmB,GAAD,EAAiBP,GAAjB,EAA+BC,GAA/B,EAA8CO,IAA9C,EAA6D;AACpE,KAAMJ,OAAOG,IAAIJ,MAAJ,IAAc,GAA3B;AACAF,KAAIE,MAAJ,CAAWC,IAAX,EAAiBd,IAAjB,CAAsB;AACrBc,YADqB;AAErBK,SAAO,IAFc;AAGrBH,WAASC,IAAID,OAAJ,IAAe;AAHH,EAAtB;AAKA,CAPD;;AASA,IAAII,QAAQC,GAAR,CAAYC,QAAZ,KAAyB,MAA7B,EAAqC;AACpC,wBAAQ,YAAM;AACbC,mBAAGC,MAAH,CAAU7B,MAAV;AACAA,SAAO6B,MAAP,CAAc,IAAd,EAAoB,YAAM;AACzBC,iBAAIC,IAAJ,CAAS,4BAAT;AACA,GAFD;AAGA,EALD;AAMA;;kBAEchC,G","file":"app.js","sourcesContent":["// @flow\n\nimport express from 'express';\nimport passport from 'passport';\nimport bodyParser from 'body-parser';\nimport http from 'http';\nimport log from './helper/log';\nimport connect from './config/connect';\nimport io from './socket';\nimport {\n\tauthRouter,\n\tsocialRouter,\n\tuserRouter,\n\tpostRouter\n} from './routes';\n\nconst app = express();\nconst server = http.createServer(app);\n\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({ extended: true }));\napp.use(passport.initialize());\n\napp.use('/auth', authRouter, socialRouter);\napp.use('/api/users', userRouter);\napp.use('/api/posts', postRouter);\n\napp.get('/', (req, res) => {\n\tres.send('Welcome to our app');\n});\n\n// Handle Error\napp.get('*', (req: Request, res: Response) => {\n\tres.status(404).json({\n\t\tcode: 404,\n\t\terror: true,\n\t\tmessage: 'Not Found'\n\t});\n});\n\napp.use((err: ErrorType, req: Request, res: Response, next: Next) => {\n\tconst code = err.status || 500;\n\tres.status(code).json({\n\t\tcode,\n\t\terorr: true,\n\t\tmessage: err.message || 'Something broken'\n\t});\n});\n\nif (process.env.NODE_ENV !== 'test') {\n\tconnect(() => {\n\t\tio.listen(server);\n\t\tserver.listen(8080, () => {\n\t\t\tlog.info('Listening server port 8080');\n\t\t});\n\t});\n}\n\nexport default app;"]}