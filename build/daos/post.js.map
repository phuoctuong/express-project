{"version":3,"sources":["daos/post.js"],"names":["postDAO","findById","id","options","Promise","resolve","reject","models","post","include","model","comment","userAccount","as","attributes","userProfile","then","result","catch","error","create"],"mappings":";;;;;;;;;;AAEA;;;;AACA;;;;AAEA,IAAMA,UAAU,EAAhB;;AAEAA,QAAQC,QAAR,GAAmB,UAACC,EAAD,EAAaC,OAAb,EAAiC;AACnD,QAAO,IAAIC,kBAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACvCC,iBAAOC,IAAP,CAAYP,QAAZ,CAAqBC,EAArB;AACCO,YAAS,CACR;AACCC,WAAOH,eAAOI,OADf;AAECF,aAAS,CACR;AACCC,YAAOH,eAAOK,WADf;AAECC,SAAI,aAFL;AAGCC,iBAAY,CAAC,IAAD,CAHb;AAICL,cAAS,CACR;AACCC,aAAOH,eAAOQ,WADf;AAECF,UAAI;AAFL,MADQ;AAJV,KADQ;AAFV,IADQ;AADV,KAmBIV,OAnBJ,GAqBEa,IArBF,CAqBO;AAAA,UAAUX,QAAQY,MAAR,CAAV;AAAA,GArBP,EAsBEC,KAtBF,CAsBQ;AAAA,UAASZ,OAAOa,KAAP,CAAT;AAAA,GAtBR;AAuBA,EAxBM,CAAP;AAyBA,CA1BD;;AA4BAnB,QAAQoB,MAAR,GAAiB,UAACZ,IAAD,EAAgB;AAChC,QAAO,IAAIJ,kBAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACvCC,iBAAOC,IAAP,CAAYY,MAAZ,CAAmBZ,IAAnB,EACEQ,IADF,CACO;AAAA,UAAUX,QAAQY,MAAR,CAAV;AAAA,GADP,EAEEC,KAFF,CAEQ;AAAA,UAASZ,OAAOa,KAAP,CAAT;AAAA,GAFR;AAGA,EAJM,CAAP;AAKA,CAND;;kBAQenB,O","file":"post.js","sourcesContent":["// @flow\n\nimport Promise from 'bluebird';\nimport { models } from '../models';\n\nconst postDAO = {};\n\npostDAO.findById = (id: number, options: Object) => {\n\treturn new Promise((resolve, reject) => {\n\t\tmodels.post.findById(id, {\n\t\t\tinclude: [\n\t\t\t\t{\n\t\t\t\t\tmodel: models.comment,\n\t\t\t\t\tinclude: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tmodel: models.userAccount,\n\t\t\t\t\t\t\tas: 'UserAccount',\n\t\t\t\t\t\t\tattributes: ['id'],\n\t\t\t\t\t\t\tinclude: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tmodel: models.userProfile,\n\t\t\t\t\t\t\t\t\tas: 'UserProfile'\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t],\n\t\t\t...options\n\t\t})\n\t\t\t.then(result => resolve(result))\n\t\t\t.catch(error => reject(error));\n\t});\n};\n\npostDAO.create = (post: Post) => {\n\treturn new Promise((resolve, reject) => {\n\t\tmodels.post.create(post)\n\t\t\t.then(result => resolve(result))\n\t\t\t.catch(error => reject(error));\n\t});\n};\n\nexport default postDAO;"]}